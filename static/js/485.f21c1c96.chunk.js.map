{"version":3,"file":"static/js/485.f21c1c96.chunk.js","mappings":"4NAGaA,EAAiBC,EAAAA,GAAAA,GAAH,gIAQdC,EAAgBD,EAAAA,GAAAA,GAAH,4JASbE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sBAEbI,EAAaJ,EAAAA,GAAAA,GAAH,iIASVK,EAAcL,EAAAA,GAAAA,IAAH,wJ,mBCexB,EAjCkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,SAACX,EAAD,WACE,UAACC,EAAD,CAAeW,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAAnD,WACE,SAACF,EAAD,CACEW,IACEJ,EAAW,UATT,mCASS,OAAgBA,GAAgBK,EAE7CC,IAAKR,KAEP,SAACN,EAAD,UAAaM,QARGC,EADV,KAejB,C,8KChCYQ,EAAOnB,EAAAA,GAAAA,KAAH,0CAIJoB,EAAepB,EAAAA,GAAAA,GAAH,kG,SC2BzB,EAxBa,WACX,OAAgCqB,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAc,mCAAG,+GAEOC,EAAAA,KAFP,gBAEXC,EAFW,EAEXA,QACRJ,EAAYI,GAHO,gDAKnBC,EAAAA,GAAAA,MAAY,0CALO,yDAAH,qDASpB,OACE,UAACT,EAAD,YACE,SAACC,EAAD,+BACA,SAACS,EAAA,EAAD,CAAWvB,OAAQgB,MAGxB,C,6MC5BYQ,EAAU,mCACvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAIP,IAAMG,EAAW,mCAAG,+GAEAF,EAAAA,EAAAA,IAAA,sBAFA,uBAEfG,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBN,EAAAA,GAAAA,MAAY,0CALW,yDAAH,qDAUXO,EAAS,mCAAG,WAAMC,GAAN,kGAEEL,EAAAA,EAAAA,IAAA,6BAAgCK,IAFlC,uBAEbF,EAFa,EAEbA,KAFa,kBAGdA,GAHc,gCAKrBN,EAAAA,GAAAA,MAAY,0CALS,yDAAH,sDAUTS,EAAU,mCAAG,WAAM1B,GAAN,kGAECoB,EAAAA,EAAAA,IAAA,iBAAoBpB,IAFrB,uBAEduB,EAFc,EAEdA,KAFc,kBAGfA,GAHe,gCAKtBN,EAAAA,GAAAA,MAAY,0CALU,yDAAH,sDAUVU,EAAO,mCAAG,WAAM3B,GAAN,kGAEIoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,aAFJ,uBAEXuB,EAFW,EAEXA,KAFW,kBAGZA,EAAKK,MAHO,gCAKnBX,EAAAA,GAAAA,MAAY,0CALO,yDAAH,sDAUPY,EAAU,mCAAG,WAAM7B,GAAN,kGAECoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,aAFD,uBAEduB,EAFc,EAEdA,KAFc,kBAGfA,EAAKP,SAHU,gCAKtBC,EAAAA,GAAAA,MAAY,0CALU,yDAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 33px;\n  align-items: stretch;\n  justify-content: start;\n`;\n\nexport const MovieListItem = styled.li`\n  max-width: 200px;\n  transition: transform 0.15s ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    color: #301934;\n  }\n`;\n\nexport const MovieListLink = styled(Link)``;\n\nexport const MovieTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 14px;\n  color: black;\n  :hover {\n    color: #301934;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  border: 1px solid #797979;\n  border-radius: 5px;\n  margin-bottom: 5px;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  MovieListWrapp,\n  MovieListItem,\n  MovieListLink,\n  MoviePoster,\n  MovieTitle,\n} from '../MovieList/MovieList.styled';\nimport defaultPosterImage from '../../images/poster.jpg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <MovieListWrapp>\n      {movies.map(({ title, id, poster_path }) => (\n        <MovieListItem key={id}>\n          <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path ? `${baseURL}${poster_path}` : defaultPosterImage\n              }\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </MovieListWrapp>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 2rem;\n`;\n\nexport const SectionTitle = styled.h1`\n  padding-bottom: 2rem;\n  text-transform: uppercase;\n  color: #301934;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { toast } from 'react-hot-toast';\n\nimport * as API from '../../services/api';\n\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Main, SectionTitle } from '../Home/Home.styled';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    renderTrending();\n  }, []);\n\n  const renderTrending = async () => {\n    try {\n      const { results } = await API.getTrending();\n      setTrending(results);\n    } catch (error) {\n      toast.error('Something went wrong, please try again');\n    }\n  };\n\n  return (\n    <Main>\n      <SectionTitle>Trending movies</SectionTitle>\n      <MovieList movies={trending} />\n    </Main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nexport const API_KEY = 'd20de05767e33e4f2fb018551512ab87';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\n// Trending\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Search\nexport const getSearch = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Details\nexport const getDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Cast\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Reviews\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n"],"names":["MovieListWrapp","styled","MovieListItem","MovieListLink","Link","MovieTitle","MoviePoster","movies","location","useLocation","map","title","id","poster_path","to","state","from","src","defaultPosterImage","alt","Main","SectionTitle","useState","trending","setTrending","useEffect","renderTrending","API","results","toast","MovieList","API_KEY","axios","api_key","getTrending","data","getSearch","query","getDetails","getCast","cast","getReviews"],"sourceRoot":""}