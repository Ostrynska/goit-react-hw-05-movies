{"version":3,"file":"static/js/564.8cf42b73.chunk.js","mappings":"4NAGaA,EAAiBC,EAAAA,GAAAA,GAAH,gIAQdC,EAAgBD,EAAAA,GAAAA,GAAH,4JASbE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sBAEbI,EAAaJ,EAAAA,GAAAA,GAAH,iIASVK,EAAcL,EAAAA,GAAAA,IAAH,wJ,mBCexB,EAjCkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,SAACX,EAAD,WACE,UAACC,EAAD,CAAeW,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAAnD,WACE,SAACF,EAAD,CACEW,IACEJ,EAAW,UATT,mCASS,OAAgBA,GAAgBK,EAE7CC,IAAKR,KAEP,SAACN,EAAD,UAAaM,QARGC,EADV,KAejB,C,wMChCYQ,EAAanB,EAAAA,GAAAA,KAAH,mQAYVoB,EAAepB,EAAAA,GAAAA,OAAH,sPAcZqB,EAAcrB,EAAAA,GAAAA,MAAH,2P,SCMxB,EA3BkB,SAAC,GAAmC,IAAjCsB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,UAACL,EAAD,CAAYK,SAAUA,EAAtB,WACE,SAACH,EAAD,CACEI,KAAK,OACLC,KAAK,aACLJ,MAAOA,EACPC,SAAUA,EACVI,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACT,EAAD,CAAcK,KAAK,SAAnB,UACE,SAAC,cAAD,CAAsBH,MAAO,CAAEQ,KAAM,QAArC,UACE,SAAC,MAAD,UAKT,E,UCxBYC,EAAO/B,EAAAA,GAAAA,KAAH,wGAOJgC,EAAgBhC,EAAAA,GAAAA,QAAH,sBC+C1B,EA7Ce,WAAO,IAAD,EACnB,GAA4BiC,EAAAA,EAAAA,UAAS,IAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA0BjD,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,+GAE8BC,EAAAA,GAAcH,GAF5C,gBAEYI,EAFZ,EAEYA,QACRV,EAAUU,GAHd,gDAKIC,EAAAA,GAAAA,MAAY,0CALhB,0DAHc,sBACTL,GADS,mCAWdM,EACD,GAAE,CAACN,KAGF,SAACT,EAAD,WACE,UAACC,EAAD,YACE,SAAC,EAAD,CACEV,MAAOa,EACPZ,SA7Ba,SAAAwB,GACnBX,EAASW,EAAEC,cAAc1B,MAAM2B,cAChC,EA4BOzB,SA1Ba,SAAAuB,GACnBA,EAAEG,iBACFX,EAAgB,CAAEJ,MAAOA,IACzBC,EAAS,GACV,KAwBK,SAACe,EAAA,EAAD,CAAW7C,OAAQA,QAI1B,C,6MCnDY8C,EAAU,mCACvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAIP,IAAMG,EAAW,mCAAG,+GAEAF,EAAAA,EAAAA,IAAA,sBAFA,uBAEfG,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBX,EAAAA,GAAAA,MAAY,0CALW,yDAAH,qDAUXY,EAAS,mCAAG,WAAMtB,GAAN,kGAEEkB,EAAAA,EAAAA,IAAA,6BAAgClB,IAFlC,uBAEbqB,EAFa,EAEbA,KAFa,kBAGdA,GAHc,gCAKrBX,EAAAA,GAAAA,MAAY,0CALS,yDAAH,sDAUTa,EAAU,mCAAG,WAAM/C,GAAN,kGAEC0C,EAAAA,EAAAA,IAAA,iBAAoB1C,IAFrB,uBAEd6C,EAFc,EAEdA,KAFc,kBAGfA,GAHe,gCAKtBX,EAAAA,GAAAA,MAAY,0CALU,yDAAH,sDAUVc,EAAO,mCAAG,WAAMhD,GAAN,kGAEI0C,EAAAA,EAAAA,IAAA,iBAAoB1C,EAApB,aAFJ,uBAEX6C,EAFW,EAEXA,KAFW,kBAGZA,EAAKI,MAHO,gCAKnBf,EAAAA,GAAAA,MAAY,0CALO,yDAAH,sDAUPgB,EAAU,mCAAG,WAAMlD,GAAN,kGAEC0C,EAAAA,EAAAA,IAAA,iBAAoB1C,EAApB,aAFD,uBAEd6C,EAFc,EAEdA,KAFc,kBAGfA,EAAKZ,SAHU,gCAKtBC,EAAAA,GAAAA,MAAY,0CALU,yDAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movie.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 33px;\n  align-items: stretch;\n  justify-content: start;\n`;\n\nexport const MovieListItem = styled.li`\n  max-width: 200px;\n  transition: transform 0.15s ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    color: #301934;\n  }\n`;\n\nexport const MovieListLink = styled(Link)``;\n\nexport const MovieTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 14px;\n  color: black;\n  :hover {\n    color: #301934;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  border: 1px solid #797979;\n  border-radius: 5px;\n  margin-bottom: 5px;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  MovieListWrapp,\n  MovieListItem,\n  MovieListLink,\n  MoviePoster,\n  MovieTitle,\n} from '../MovieList/MovieList.styled';\nimport defaultPosterImage from '../../images/poster.jpg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <MovieListWrapp>\n      {movies.map(({ title, id, poster_path }) => (\n        <MovieListItem key={id}>\n          <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path ? `${baseURL}${poster_path}` : defaultPosterImage\n              }\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </MovieListWrapp>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin-bottom: 40px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border-bottom: 1px solid #e6e6fa;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 14px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { IconContext } from 'react-icons';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { SearchForm, SearchButton, SearchInput } from './SearchBox.styled';\n\nconst SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"searchName\"\n        value={value}\n        onChange={onChange}\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Movie name...\"\n      />\n      <SearchButton type=\"submit\">\n        <IconContext.Provider value={{ size: '20px' }}>\n          <BsSearch />\n        </IconContext.Provider>\n      </SearchButton>\n    </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 1rem 2rem;\n  display: block;\n  min-height: 100vh;\n  margin: 0px;\n`;\n\nexport const MoviesSection = styled.section``;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-hot-toast';\n\nimport * as API from '../../services/api';\n\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Main, MoviesSection } from './Movie.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieSearch = searchParams.get('query') ?? '';\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieSearch) return;\n\n    async function renderMovie() {\n      try {\n        const { results } = await API.getSearch(movieSearch);\n        setMovies(results);\n      } catch (error) {\n        toast.error('Something went wrong, please try again');\n      }\n    }\n    renderMovie();\n  }, [movieSearch]);\n\n  return (\n    <Main>\n      <MoviesSection>\n        <SearchBox\n          value={query}\n          onChange={handleChange}\n          onSubmit={handleSubmit}\n        />\n        <MovieList movies={movies} />\n      </MoviesSection>\n    </Main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nexport const API_KEY = 'd20de05767e33e4f2fb018551512ab87';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\n// Trending\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Search\nexport const getSearch = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Details\nexport const getDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Cast\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Reviews\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n"],"names":["MovieListWrapp","styled","MovieListItem","MovieListLink","Link","MovieTitle","MoviePoster","movies","location","useLocation","map","title","id","poster_path","to","state","from","src","defaultPosterImage","alt","SearchForm","SearchButton","SearchInput","value","onChange","onSubmit","type","name","autocomplete","autoFocus","placeholder","size","Main","MoviesSection","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","movieSearch","get","useEffect","API","results","toast","renderMovie","e","currentTarget","toLowerCase","preventDefault","MovieList","API_KEY","axios","api_key","getTrending","data","getSearch","getDetails","getCast","cast","getReviews"],"sourceRoot":""}