{"version":3,"file":"static/js/257.457bf3f0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nexport const ButtonLink = styled(Link)`\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n  color: white;\n  border-radius: 7px;\n  padding: 0.375rem;\n  height: 1.5rem;\n  width: auto;\n  font-size: 0.75rem;\n  background-color: #301934;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    color: #000;\n    background-color: #f5f4fa;\n    box-shadow: 0px 3px 1px rgb(0 0 0 / 10%), 0px 1px 2px rgb(0 0 0 / 8%),\n      0px 2px 2px rgb(0 0 0 / 12%);\n  }\n`;\n\nexport const Main = styled.main`\n  padding: 1rem 2rem;\n  display: block;\n  min-height: 100vh;\n  margin: 0px;\n`;\n\nexport const MovieCard = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  padding: 3rem 15rem;\n  flex-grow: 1;\n  justify-content: center;\n  box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 10px;\n  width: 350px;\n  height: auto;\n`;\n\nexport const MovieInformation = styled.div`\n  display: block;\n  margin-left: 3.5rem;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 3.5rem;\n  line-height: 1;\n  margin-bottom: 2rem;\n  color: #301934;\n`;\n\nexport const MovieSubTitle = styled.h3`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: #301934;\n`;\n\nexport const Text = styled.p`\n  font-size: 1.05rem;\n  line-height: 1.5;\n  margin-bottom: 1rem;\n`;\n\nexport const TextAccent = styled.span`\n  color: white;\n  background-color: #301934;\n  text-transform: uppercase;\n  padding: 0.3rem;\n  border-radius: 10px;\n`;\n\nexport const TextScore = styled.span`\n  margin-left: 10px;\n  font-weight: 700;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n`;\n\nexport const AdditionalItem = styled.li`\n  width: 80px;\n  text-align: center;\n  border: 1px solid #301934;\n  padding: 0.3rem;\n  border-radius: 10px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :last-child {\n    margin-left: 1rem;\n  }\n  :hover {\n    border: none;\n    background-color: #e6e6fa;\n    box-shadow: 0px 3px 1px rgb(0 0 0 / 10%), 0px 1px 2px rgb(0 0 0 / 8%),\n      0px 2px 2px rgb(0 0 0 / 12%);\n  }\n`;\n\nexport const AdditionalItemLink = styled(Link)`\n  color: black;\n  :hover {\n    font-weight: 700;\n  }\n`;\n\nexport const Loading = styled(BeatLoader)`\n  margin: 50vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  size: 150px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\n\nimport { toast } from 'react-hot-toast';\n\nimport * as API from '../../services/api';\n\nimport {\n  Loading,\n  ButtonLink,\n  Main,\n  MovieCard,\n  MovieImage,\n  MovieInformation,\n  MovieTitle,\n  MovieSubTitle,\n  Text,\n  TextAccent,\n  TextScore,\n  AdditionalList,\n  AdditionalItem,\n  AdditionalItemLink,\n} from '../MovieDetails/MovieDetails.styled';\nimport defaultPosterImage from '../../images/poster.jpg';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  const baseURL = 'https://image.tmdb.org/t/p/w400';\n\n  useEffect(() => {\n    const renderMovieDetails = async () => {\n      try {\n        const results = await API.getDetails(id);\n        setDetails(results);\n      } catch (error) {\n        toast.error('Something went wrong, please try again');\n      }\n    };\n    renderMovieDetails();\n  }, [id]);\n\n  if (!details) return;\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    details;\n  const releaseYear = (release_date || '').slice(0, 4);\n  const score = Math.round(vote_average * 10);\n\n  return (\n    <Main>\n      <ButtonLink type=\"button\" to={from}>\n        Go back\n      </ButtonLink>\n      <MovieCard>\n        <MovieImage\n          src={poster_path ? `${baseURL}${poster_path}` : defaultPosterImage}\n          alt={title}\n        />\n        <MovieInformation>\n          <MovieTitle>\n            {title} ({releaseYear})\n          </MovieTitle>\n          <Text>\n            <TextAccent>User Score</TextAccent>\n            <TextScore>{score}%</TextScore>\n          </Text>\n          <MovieSubTitle>Overview</MovieSubTitle>\n          <Text>{overview}</Text>\n          <MovieSubTitle>Genres</MovieSubTitle>\n          <Text>{genres && genres.map(genre => genre.name).join(', ')}</Text>\n          <MovieSubTitle>Additional Information</MovieSubTitle>\n          <AdditionalList>\n            <AdditionalItem>\n              <AdditionalItemLink to=\"cast\" state={{ from }}>\n                Cast\n              </AdditionalItemLink>\n            </AdditionalItem>\n            <AdditionalItem>\n              <AdditionalItemLink to=\"reviews\" state={{ from }}>\n                Reviews\n              </AdditionalItemLink>\n            </AdditionalItem>\n          </AdditionalList>\n        </MovieInformation>\n      </MovieCard>\n      <Suspense\n        color={'#301934'}\n        loading={true}\n        fallback={<Loading aria-label=\"Loading Spinner\" data-testid=\"loader\" />}\n      >\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nexport const API_KEY = 'd20de05767e33e4f2fb018551512ab87';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\n// Trending\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Search\nexport const getSearch = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Details\nexport const getDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Cast\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Reviews\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n"],"names":["ButtonLink","styled","Link","Main","MovieCard","MovieImage","MovieInformation","MovieTitle","MovieSubTitle","Text","TextAccent","TextScore","AdditionalList","AdditionalItem","AdditionalItemLink","Loading","BeatLoader","useState","details","setDetails","id","useParams","from","useLocation","state","useEffect","renderMovieDetails","API","results","toast","title","poster_path","release_date","vote_average","overview","genres","releaseYear","slice","score","Math","round","type","to","src","defaultPosterImage","alt","map","genre","name","join","Suspense","color","loading","fallback","API_KEY","axios","api_key","getTrending","data","getSearch","query","getDetails","getCast","cast","getReviews"],"sourceRoot":""}