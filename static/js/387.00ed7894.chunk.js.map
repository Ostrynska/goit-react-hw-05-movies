{"version":3,"file":"static/js/387.00ed7894.chunk.js","mappings":"oSAEaA,EAAiBC,EAAAA,GAAAA,QAAH,+CAIdC,EAAmBD,EAAAA,GAAAA,GAAH,wDAKhBE,EAAkBF,EAAAA,GAAAA,GAAH,sBAEfG,EAAgBH,EAAAA,GAAAA,GAAH,oEAKbI,EAAOJ,EAAAA,GAAAA,EAAH,4C,SCgDjB,EAlDgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,6GAEDC,EAAAA,GAAeJ,GAFd,OAEjBK,EAFiB,OAGvBN,EAAWM,GAHY,gDAKvBC,EAAAA,GAAAA,MAAY,0CALW,yDAAH,qDAQxBH,GACD,GAAE,CAACH,IAECF,GAA8B,IAAnBA,EAAQS,QAStB,SAAChB,EAAD,WACE,SAACE,EAAD,UACGK,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASV,EAAS,EAATA,GAC/B,OACE,UAACN,EAAD,YACE,UAACC,EAAD,sBAAwBc,MACxB,SAACb,EAAD,UAAOc,MAFaV,EAKzB,SAhBH,SAACT,EAAD,WACE,qEAmBP,C,6MCnDYoB,EAAU,mCACvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAIP,IAAMG,EAAW,mCAAG,+GAEAF,EAAAA,EAAAA,IAAA,sBAFA,uBAEfG,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBT,EAAAA,GAAAA,MAAY,0CALW,yDAAH,qDAUXU,EAAS,mCAAG,WAAMC,GAAN,kGAEEL,EAAAA,EAAAA,IAAA,6BAAgCK,IAFlC,uBAEbF,EAFa,EAEbA,KAFa,kBAGdA,GAHc,gCAKrBT,EAAAA,GAAAA,MAAY,0CALS,yDAAH,sDAUTY,EAAU,mCAAG,WAAMlB,GAAN,kGAECY,EAAAA,EAAAA,IAAA,iBAAoBZ,IAFrB,uBAEde,EAFc,EAEdA,KAFc,kBAGfA,GAHe,gCAKtBT,EAAAA,GAAAA,MAAY,0CALU,yDAAH,sDAUVa,EAAO,mCAAG,WAAMnB,GAAN,kGAEIY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,aAFJ,uBAEXe,EAFW,EAEXA,KAFW,kBAGZA,EAAKK,MAHO,gCAKnBd,EAAAA,GAAAA,MAAY,0CALO,yDAAH,sDAUPe,EAAU,mCAAG,WAAMrB,GAAN,kGAECY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,aAFD,uBAEde,EAFc,EAEdA,KAFc,kBAGfA,EAAKV,SAHU,gCAKtBC,EAAAA,GAAAA,MAAY,0CALU,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsSection = styled.section`\n  padding: 1rem 0rem;\n`;\n\nexport const ReviewsListWrapp = styled.ul`\n  display: grid;\n  gap: 16px;\n`;\n\nexport const ReviewsListItem = styled.li``;\n\nexport const ReviewsAuthor = styled.h2`\n  padding-bottom: 5px;\n  font-size: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\n\nimport * as API from '../../services/api';\n\nimport {\n  ReviewsSection,\n  ReviewsListWrapp,\n  ReviewsListItem,\n  ReviewsAuthor,\n  Text,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const renderMovieReviews = async () => {\n      try {\n        const results = await API.getReviews(id);\n        setReviews(results);\n      } catch (error) {\n        toast.error('Something went wrong, please try again');\n      }\n    };\n    renderMovieReviews();\n  }, [id]);\n\n  if (!reviews || reviews.length === 0) {\n    return (\n      <ReviewsSection>\n        <h2>There are yet no reviews for this movie</h2>\n      </ReviewsSection>\n    );\n  }\n\n  return (\n    <ReviewsSection>\n      <ReviewsListWrapp>\n        {reviews.map(({ author, content, id }) => {\n          return (\n            <ReviewsListItem key={id}>\n              <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n              <Text>{content}</Text>\n            </ReviewsListItem>\n          );\n        })}\n      </ReviewsListWrapp>\n    </ReviewsSection>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nexport const API_KEY = 'd20de05767e33e4f2fb018551512ab87';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\n// Trending\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Search\nexport const getSearch = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Details\nexport const getDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Cast\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n\n// Reviews\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    toast.error('Something went wrong, please try again');\n  }\n};\n"],"names":["ReviewsSection","styled","ReviewsListWrapp","ReviewsListItem","ReviewsAuthor","Text","useState","reviews","setReviews","id","useParams","useEffect","renderMovieReviews","API","results","toast","length","map","author","content","API_KEY","axios","api_key","getTrending","data","getSearch","query","getDetails","getCast","cast","getReviews"],"sourceRoot":""}